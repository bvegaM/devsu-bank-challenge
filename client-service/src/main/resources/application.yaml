spring:
  application:
    name: client-service
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://${HOST_CLIENT}:${PORT_CLIENT}/${DATABASE_CLIENT}
    username: ${USERNAME_CLIENT}
    password: ${PASSWORD_CLIENT}
    driver-class-name: org.postgresql.Driver
    initialization-mode: always
    hikari:
      pool-name: SpringHikariCP
      auto-commit: false
      connection-timeout: 300
      maximum-pool-size: 10
  kafka:
    topic:
      name: reports
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8081

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_HOST:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: health